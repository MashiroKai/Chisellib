$date
	Sat Dec 23 14:42:08 2023
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module Sync_tb $end
$var wire 1 ! LOAD $end
$var wire 1 " WR_USEDW $end
$var wire 1 # WR_N $end
$var wire 1 $ SIWU_N $end
$var wire 1 % RD_USEDW $end
$var wire 1 & RD_N $end
$var wire 1 ' OE_N $end
$var wire 1 ( FULL $end
$var wire 1 ) FIFO_VALID $end
$var wire 1 * FIFO_DOUT $end
$var wire 1 + EMPTY $end
$var reg 8 , FIFO_DIN [7:0] $end
$var reg 1 - VALID $end
$var reg 1 . ft232_clk $end
$var reg 1 / ft232_rst_n $end
$var reg 1 0 sys_clk $end
$var reg 1 1 sys_rst_n $end
$scope module my_fifo_usb_sync $end
$var wire 8 2 D [7:0] $end
$var wire 8 3 FIFO_DIN [7:0] $end
$var wire 1 ! LOAD $end
$var wire 1 4 RXF_N $end
$var wire 1 5 TXE_N $end
$var wire 1 - VALID $end
$var wire 1 . ft232_clk $end
$var wire 1 / ft232_rst_n $end
$var wire 1 0 sys_clk $end
$var wire 1 1 sys_rst_n $end
$var wire 17 6 WR_USEDW [16:0] $end
$var wire 18 7 WR_RD_USEDW [17:0] $end
$var wire 1 8 WR_EMPTY $end
$var wire 1 9 SEND_CMPLE $end
$var wire 18 : RD_WR_USEDW [17:0] $end
$var wire 9 ; RD_USEDW [8:0] $end
$var wire 1 < RD_FULL $end
$var wire 1 ( FULL $end
$var wire 1 ) FIFO_VALID $end
$var wire 8 = FIFO_DOUT [7:0] $end
$var wire 1 > FIFO $end
$var wire 1 + EMPTY $end
$var wire 8 ? DOUT [7:0] $end
$var reg 1 ' OE_N $end
$var reg 1 @ RD_FIFO_DIN $end
$var reg 1 A RD_FIFO_VALID $end
$var reg 1 & RD_N $end
$var reg 1 B SEND_ENABLE $end
$var reg 1 $ SIWU_N $end
$var reg 3 C STATE [2:0] $end
$var reg 1 D WR_LOAD $end
$var reg 1 # WR_N $end
$scope function logb2 $end
$var reg 32 E tmp [31:0] $end
$var reg 32 F value [31:0] $end
$upscope $end
$scope module rd_fifo $end
$var wire 8 G data_in [7:0] $end
$var wire 1 H neg_wr_en $end
$var wire 1 0 rd_clk $end
$var wire 1 ! rd_en $end
$var wire 10 I rd_ptr_g [9:0] $end
$var wire 1 1 rd_rst_n $end
$var wire 1 ) valid $end
$var wire 1 . wr_clk $end
$var wire 1 A wr_en $end
$var wire 10 J wr_ptr_g [9:0] $end
$var wire 1 / wr_rst_n $end
$var wire 10 K wr_usedw [9:0] $end
$var wire 9 L wr_ptr_true [8:0] $end
$var wire 10 M wr_bin_wr_ptr [9:0] $end
$var wire 10 N wr_bin_rd_ptr [9:0] $end
$var wire 10 O rd_usedw [9:0] $end
$var wire 9 P rd_ptr_true [8:0] $end
$var wire 10 Q rd_bin_wr_ptr [9:0] $end
$var wire 10 R rd_bin_rd_ptr [9:0] $end
$var wire 1 < full $end
$var wire 1 + empty $end
$var reg 8 S data_out [7:0] $end
$var reg 10 T rd_ptr [9:0] $end
$var reg 10 U rd_ptr_g_d1 [9:0] $end
$var reg 10 V rd_ptr_g_d2 [9:0] $end
$var reg 1 W wr_en_r $end
$var reg 10 X wr_ptr [9:0] $end
$var reg 10 Y wr_ptr_g_d1 [9:0] $end
$var reg 10 Z wr_ptr_g_d2 [9:0] $end
$var reg 10 [ wr_ptr_r [9:0] $end
$scope function gray2bin $end
$var reg 10 \ bin_code [9:0] $end
$var reg 10 ] gray_code [9:0] $end
$var reg 10 ^ gray_in [9:0] $end
$var reg 1 _ tmp $end
$var integer 32 ` i [31:0] $end
$var integer 32 a j [31:0] $end
$upscope $end
$scope function logb2 $end
$var reg 32 b tmp [31:0] $end
$var reg 32 c value [31:0] $end
$upscope $end
$scope module g2b1 $end
$var wire 17 d gray [16:0] $end
$var wire 17 e bin [16:0] $end
$scope begin gray_2_bin[0] $end
$upscope $end
$scope begin gray_2_bin[1] $end
$upscope $end
$scope begin gray_2_bin[2] $end
$upscope $end
$scope begin gray_2_bin[3] $end
$upscope $end
$scope begin gray_2_bin[4] $end
$upscope $end
$scope begin gray_2_bin[5] $end
$upscope $end
$scope begin gray_2_bin[6] $end
$upscope $end
$scope begin gray_2_bin[7] $end
$upscope $end
$scope begin gray_2_bin[8] $end
$upscope $end
$scope begin gray_2_bin[9] $end
$upscope $end
$scope begin gray_2_bin[10] $end
$upscope $end
$scope begin gray_2_bin[11] $end
$upscope $end
$scope begin gray_2_bin[12] $end
$upscope $end
$scope begin gray_2_bin[13] $end
$upscope $end
$scope begin gray_2_bin[14] $end
$upscope $end
$scope begin gray_2_bin[15] $end
$upscope $end
$upscope $end
$scope module g2b2 $end
$var wire 17 f gray [16:0] $end
$var wire 17 g bin [16:0] $end
$scope begin gray_2_bin[0] $end
$upscope $end
$scope begin gray_2_bin[1] $end
$upscope $end
$scope begin gray_2_bin[2] $end
$upscope $end
$scope begin gray_2_bin[3] $end
$upscope $end
$scope begin gray_2_bin[4] $end
$upscope $end
$scope begin gray_2_bin[5] $end
$upscope $end
$scope begin gray_2_bin[6] $end
$upscope $end
$scope begin gray_2_bin[7] $end
$upscope $end
$scope begin gray_2_bin[8] $end
$upscope $end
$scope begin gray_2_bin[9] $end
$upscope $end
$scope begin gray_2_bin[10] $end
$upscope $end
$scope begin gray_2_bin[11] $end
$upscope $end
$scope begin gray_2_bin[12] $end
$upscope $end
$scope begin gray_2_bin[13] $end
$upscope $end
$scope begin gray_2_bin[14] $end
$upscope $end
$scope begin gray_2_bin[15] $end
$upscope $end
$upscope $end
$scope module g2b3 $end
$var wire 17 h gray [16:0] $end
$var wire 17 i bin [16:0] $end
$scope begin gray_2_bin[0] $end
$upscope $end
$scope begin gray_2_bin[1] $end
$upscope $end
$scope begin gray_2_bin[2] $end
$upscope $end
$scope begin gray_2_bin[3] $end
$upscope $end
$scope begin gray_2_bin[4] $end
$upscope $end
$scope begin gray_2_bin[5] $end
$upscope $end
$scope begin gray_2_bin[6] $end
$upscope $end
$scope begin gray_2_bin[7] $end
$upscope $end
$scope begin gray_2_bin[8] $end
$upscope $end
$scope begin gray_2_bin[9] $end
$upscope $end
$scope begin gray_2_bin[10] $end
$upscope $end
$scope begin gray_2_bin[11] $end
$upscope $end
$scope begin gray_2_bin[12] $end
$upscope $end
$scope begin gray_2_bin[13] $end
$upscope $end
$scope begin gray_2_bin[14] $end
$upscope $end
$scope begin gray_2_bin[15] $end
$upscope $end
$upscope $end
$scope module g2b4 $end
$var wire 17 j gray [16:0] $end
$var wire 17 k bin [16:0] $end
$scope begin gray_2_bin[0] $end
$upscope $end
$scope begin gray_2_bin[1] $end
$upscope $end
$scope begin gray_2_bin[2] $end
$upscope $end
$scope begin gray_2_bin[3] $end
$upscope $end
$scope begin gray_2_bin[4] $end
$upscope $end
$scope begin gray_2_bin[5] $end
$upscope $end
$scope begin gray_2_bin[6] $end
$upscope $end
$scope begin gray_2_bin[7] $end
$upscope $end
$scope begin gray_2_bin[8] $end
$upscope $end
$scope begin gray_2_bin[9] $end
$upscope $end
$scope begin gray_2_bin[10] $end
$upscope $end
$scope begin gray_2_bin[11] $end
$upscope $end
$scope begin gray_2_bin[12] $end
$upscope $end
$scope begin gray_2_bin[13] $end
$upscope $end
$scope begin gray_2_bin[14] $end
$upscope $end
$scope begin gray_2_bin[15] $end
$upscope $end
$upscope $end
$upscope $end
$scope module sendcnt $end
$var wire 1 l asyn $end
$var wire 1 . clk $end
$var wire 1 m en $end
$var wire 1 / rst_n $end
$var reg 1 n cnt $end
$var reg 1 9 pulse $end
$scope function logb2 $end
$var reg 32 o tmp [31:0] $end
$var reg 32 p value [31:0] $end
$upscope $end
$upscope $end
$scope module wr_fifo $end
$var wire 8 q data_in [7:0] $end
$var wire 8 r data_out [7:0] $end
$var wire 1 s neg_wr_en $end
$var wire 1 . rd_clk $end
$var wire 1 D rd_en $end
$var wire 18 t rd_ptr_g [17:0] $end
$var wire 1 / rd_rst_n $end
$var wire 1 > valid $end
$var wire 1 0 wr_clk $end
$var wire 1 - wr_en $end
$var wire 18 u wr_ptr_g [17:0] $end
$var wire 1 1 wr_rst_n $end
$var wire 18 v wr_usedw [17:0] $end
$var wire 17 w wr_ptr_true [16:0] $end
$var wire 18 x wr_bin_wr_ptr [17:0] $end
$var wire 18 y wr_bin_rd_ptr [17:0] $end
$var wire 18 z rd_usedw [17:0] $end
$var wire 17 { rd_ptr_true [16:0] $end
$var wire 18 | rd_bin_wr_ptr [17:0] $end
$var wire 18 } rd_bin_rd_ptr [17:0] $end
$var wire 1 ( full $end
$var wire 1 8 empty $end
$var reg 18 ~ rd_ptr [17:0] $end
$var reg 18 !" rd_ptr_g_d1 [17:0] $end
$var reg 18 "" rd_ptr_g_d2 [17:0] $end
$var reg 1 #" wr_en_r $end
$var reg 18 $" wr_ptr [17:0] $end
$var reg 18 %" wr_ptr_g_d1 [17:0] $end
$var reg 18 &" wr_ptr_g_d2 [17:0] $end
$var reg 18 '" wr_ptr_r [17:0] $end
$scope function logb2 $end
$var reg 32 (" tmp [31:0] $end
$var reg 32 )" value [31:0] $end
$upscope $end
$scope module g2b1 $end
$var wire 17 *" gray [16:0] $end
$var wire 17 +" bin [16:0] $end
$scope begin gray_2_bin[0] $end
$upscope $end
$scope begin gray_2_bin[1] $end
$upscope $end
$scope begin gray_2_bin[2] $end
$upscope $end
$scope begin gray_2_bin[3] $end
$upscope $end
$scope begin gray_2_bin[4] $end
$upscope $end
$scope begin gray_2_bin[5] $end
$upscope $end
$scope begin gray_2_bin[6] $end
$upscope $end
$scope begin gray_2_bin[7] $end
$upscope $end
$scope begin gray_2_bin[8] $end
$upscope $end
$scope begin gray_2_bin[9] $end
$upscope $end
$scope begin gray_2_bin[10] $end
$upscope $end
$scope begin gray_2_bin[11] $end
$upscope $end
$scope begin gray_2_bin[12] $end
$upscope $end
$scope begin gray_2_bin[13] $end
$upscope $end
$scope begin gray_2_bin[14] $end
$upscope $end
$scope begin gray_2_bin[15] $end
$upscope $end
$upscope $end
$scope module g2b2 $end
$var wire 17 ," gray [16:0] $end
$var wire 17 -" bin [16:0] $end
$scope begin gray_2_bin[0] $end
$upscope $end
$scope begin gray_2_bin[1] $end
$upscope $end
$scope begin gray_2_bin[2] $end
$upscope $end
$scope begin gray_2_bin[3] $end
$upscope $end
$scope begin gray_2_bin[4] $end
$upscope $end
$scope begin gray_2_bin[5] $end
$upscope $end
$scope begin gray_2_bin[6] $end
$upscope $end
$scope begin gray_2_bin[7] $end
$upscope $end
$scope begin gray_2_bin[8] $end
$upscope $end
$scope begin gray_2_bin[9] $end
$upscope $end
$scope begin gray_2_bin[10] $end
$upscope $end
$scope begin gray_2_bin[11] $end
$upscope $end
$scope begin gray_2_bin[12] $end
$upscope $end
$scope begin gray_2_bin[13] $end
$upscope $end
$scope begin gray_2_bin[14] $end
$upscope $end
$scope begin gray_2_bin[15] $end
$upscope $end
$upscope $end
$scope module g2b3 $end
$var wire 17 ." gray [16:0] $end
$var wire 17 /" bin [16:0] $end
$scope begin gray_2_bin[0] $end
$upscope $end
$scope begin gray_2_bin[1] $end
$upscope $end
$scope begin gray_2_bin[2] $end
$upscope $end
$scope begin gray_2_bin[3] $end
$upscope $end
$scope begin gray_2_bin[4] $end
$upscope $end
$scope begin gray_2_bin[5] $end
$upscope $end
$scope begin gray_2_bin[6] $end
$upscope $end
$scope begin gray_2_bin[7] $end
$upscope $end
$scope begin gray_2_bin[8] $end
$upscope $end
$scope begin gray_2_bin[9] $end
$upscope $end
$scope begin gray_2_bin[10] $end
$upscope $end
$scope begin gray_2_bin[11] $end
$upscope $end
$scope begin gray_2_bin[12] $end
$upscope $end
$scope begin gray_2_bin[13] $end
$upscope $end
$scope begin gray_2_bin[14] $end
$upscope $end
$scope begin gray_2_bin[15] $end
$upscope $end
$upscope $end
$scope module g2b4 $end
$var wire 17 0" gray [16:0] $end
$var wire 17 1" bin [16:0] $end
$scope begin gray_2_bin[0] $end
$upscope $end
$scope begin gray_2_bin[1] $end
$upscope $end
$scope begin gray_2_bin[2] $end
$upscope $end
$scope begin gray_2_bin[3] $end
$upscope $end
$scope begin gray_2_bin[4] $end
$upscope $end
$scope begin gray_2_bin[5] $end
$upscope $end
$scope begin gray_2_bin[6] $end
$upscope $end
$scope begin gray_2_bin[7] $end
$upscope $end
$scope begin gray_2_bin[8] $end
$upscope $end
$scope begin gray_2_bin[9] $end
$upscope $end
$scope begin gray_2_bin[10] $end
$upscope $end
$scope begin gray_2_bin[11] $end
$upscope $end
$scope begin gray_2_bin[12] $end
$upscope $end
$scope begin gray_2_bin[13] $end
$upscope $end
$scope begin gray_2_bin[14] $end
$upscope $end
$scope begin gray_2_bin[15] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b100000000000000000 )"
b0 ("
b0 '"
b0 &"
b0 %"
b0 $"
0#"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
0s
bx r
bx q
bx p
bx o
0n
0m
0l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
b1000000000 c
b0 b
bx a
bx `
x_
bx ^
bx ]
bx \
b0 [
b0 Z
b0 Y
b0 X
0W
b0 V
b0 U
b0 T
bx S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
0H
b0 G
bx F
bx E
0D
b0 C
0B
0A
0@
bx ?
0>
bx =
0<
b0 ;
b0 :
09
18
b0 7
b0 6
05
14
bx 3
b0z 2
01
00
0/
0.
x-
bx ,
1+
x*
0)
0(
1'
1&
0%
x$
1#
0"
z!
$end
#200
10
#250
1.
#400
00
#500
0.
#600
10
#750
1.
#800
00
#1000
10
0.
#1200
00
#1250
1.
#1400
10
#1500
0.
#1600
00
#1750
1.
#1800
10
#2000
00
0.
b11101011 ,
b11101011 3
b11101011 q
1-
1/
11
#2200
b1 w
b11101011 ?
b11101011 r
b1 $"
1#"
10
#2250
1.
#2400
1>
1s
00
0-
#2500
0.
#2600
1"
b1 6
b1 v
b1 x
b1 1"
b1 0"
b1 u
0>
0s
b1 '"
0#"
10
#2750
b1 %"
1.
#2800
00
b10111011 ,
b10111011 3
b10111011 q
1-
#3000
b10 w
b10 $"
1#"
10
0.
#3200
1>
1s
00
0-
#3250
1B
b1 7
b1 z
b1 |
b1 +"
08
b1 *"
b1 &"
1.
#3400
0"
b10 6
b10 v
b10 x
b10 1"
b11 0"
b11 u
0>
0s
b10 '"
0#"
10
#3500
0.
#3600
00
#3750
1m
1D
0#
b11 %"
b100 C
1.
#3800
10
#4000
00
0.
#4200
10
#4250
b1 7
b1 z
b1 }
b1 -"
b10 |
b10 +"
b1 ,"
b11 *"
b10111011 ?
b10111011 r
b1 {
b1 t
1n
b11 &"
b1 ~
1.
#4400
00
#4500
0.
#4600
b1 !"
10
#4750
0B
0m
b0 7
b0 z
1#
0D
b10 }
b10 -"
18
b11 ,"
bx ?
bx r
b10 {
b11 t
b10 ~
0n
19
1.
#4800
00
#5000
1"
b1 6
b1 v
b1 y
b1 /"
b1 ."
b1 ""
b11 !"
10
0.
#5200
00
#5250
b0 C
09
1.
#5400
0"
b0 6
b0 v
b10 y
b10 /"
b11 ."
b11 ""
10
#5500
0.
#5600
00
#5750
1.
#5800
10
#6000
00
0.
#6200
10
#6250
1.
#6400
00
#6500
0.
#6600
10
#6750
1.
#6800
00
#7000
10
0.
#7200
00
#7250
1.
#7400
10
#7500
0.
#7600
00
#7750
1.
#7800
10
#8000
00
0.
#8200
10
#8250
1.
#8400
00
#8500
0.
#8600
10
#8750
1.
#8800
00
#9000
10
0.
#9200
00
#9250
1.
#9400
10
#9500
0.
#9600
00
#9750
1.
#9800
10
#10000
00
0.
#10200
10
#10250
1.
#10400
00
#10500
0.
#10600
10
#10750
1.
#10800
00
#11000
10
0.
#11200
00
#11250
1.
#11400
10
#11500
0.
#11600
00
#11750
1.
#11800
10
#12000
00
0.
#12200
10
#12250
1.
#12400
00
#12500
0.
#12600
10
#12750
1.
#12800
00
#13000
10
0.
#13200
00
#13250
1.
#13400
10
#13500
0.
#13600
00
#13750
1.
#13800
10
#14000
00
0.
#14200
10
#14250
1.
#14400
00
#14500
0.
#14600
10
#14750
1.
#14800
00
#15000
10
0.
#15200
00
#15250
1.
#15400
10
#15500
0.
#15600
00
#15750
1.
#15800
10
#16000
00
0.
#16200
10
#16250
1.
#16400
00
#16500
0.
#16600
10
#16750
1.
#16800
00
#17000
10
0.
#17200
00
#17250
1.
#17400
10
#17500
0.
#17600
00
#17750
1.
#17800
10
#18000
00
0.
#18200
10
#18250
1.
#18400
00
#18500
0.
#18600
10
#18750
1.
#18800
00
#19000
10
0.
#19200
00
#19250
1.
#19400
10
#19500
0.
#19600
00
#19750
1.
#19800
10
#20000
00
0.
#20200
10
#20250
1.
#20400
00
#20500
0.
#20600
10
#20750
1.
#20800
00
#21000
10
0.
#21200
00
#21250
1.
#21400
10
#21500
0.
#21600
00
#21750
1.
#21800
10
#22000
00
0.
#22200
10
#22250
1.
#22400
00
#22500
0.
#22600
10
#22750
1.
#22800
00
#23000
10
0.
#23200
00
